{"version":3,"sources":["components/Names.js","components/Filter.js","components/PersonDisplay.js","components/AddBtn.js","services/persons.js","components/Message.js","components/ErrorMsg.js","index.js"],"names":["Names","names","delName","name","number","onClick","Filter","props","value","filter","onChange","PersonDisplay","newName","handleNameEdit","newNumber","handleNumberEdit","AddBtn","onSubmit","addName","type","axios","get","then","response","data","newObject","post","id","delete","put","Message","message","className","ErrorMsg","App","array","search","useState","persons","setPersons","setNewName","setNewNumber","setFilter","setMessage","errMessage","setErrMessage","useEffect","console","log","personService","initial","event","target","preventDefault","nameObject","some","el","conf","window","confirm","repl","find","ex","updated","setTimeout","catch","error","returned","concat","e","toLowerCase","indexOf","map","key","deleted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cc0300c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n const Names = ({ names, delName }) => {\r\n   // <DeleteBtn DeleteBtn={names.name}/>\r\n    return (\r\n   <p> {names.name} {names.number} <button onClick={delName}>delete</button></p>\r\n    \r\n    )\r\n  }\r\n\r\n  export default Names","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n    <div>\r\n        search name: <input value={props.filter}\r\n        onChange={props.onChange}/>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonDisplay = (props) => {\r\n    return (\r\n    <form>\r\n    <div>name: <input value={props.newName}\r\n        onChange={props.handleNameEdit}/></div>\r\n    <div>number: <input value={props.newNumber}\r\n        onChange={props.handleNumberEdit}/>\r\n    </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default PersonDisplay","import React from 'react'\r\n\r\nconst AddBtn = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.addName}>   \r\n            <button type=\"submit\">add</button></form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBtn","import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/api/persons'\r\nconst baseUrl = '/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React from 'react'\r\n\r\nconst Message = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"success\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\nexport default Message","import React from 'react'\r\n\r\nconst ErrorMsg = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n      }\r\n    \r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMsg","import React, {useState, useEffect} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport Names from './components/Names'\r\nimport Filter from './components/Filter'\r\nimport PersonDisplay from './components/PersonDisplay'\r\nimport AddBtn from './components/AddBtn'\r\nimport personService from './services/persons'\r\nimport Message from './components/Message'\r\nimport ErrorMsg from './components/ErrorMsg'\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber] = useState('')\r\n  const [ filter, setFilter] = useState('')\r\n  const [ message, setMessage] = useState(null)\r\n  const [ errMessage, setErrMessage] = useState(null)\r\n\r\n  /*{ name: 'Arto Hellas', number: '040-123456' },\r\n  { name: 'Ada Lovelace', number: '39-44-5323523' },\r\n  { name: 'Dan Abramov', number: '12-43-234345' },\r\n  { name: 'Mary Poppendieck', number: '39-23-6423122' }*/ \r\n\r\n  const addName = (event) => {\r\n    event.preventDefault()\r\n    const nameObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n    if (persons.some(el => el.name === newName))\r\n        var conf = window.confirm(`${newName} is already added to the phonebook, replace existing phone number?`)\r\n        if (conf === true) {\r\n          const repl = persons.find(ex => ex.name === newName)\r\n          personService\r\n            .update(repl.id, nameObject)\r\n            .then(updated => {\r\n              setMessage(`Succesfully replaced ${nameObject.name} phone number`)\r\n              setTimeout(() => {\r\n                setMessage(null)\r\n              }, 3000)\r\n            setNewName(\"\")\r\n            setNewNumber(\"\")\r\n            })\r\n            .catch(error => {\r\n              setErrMessage(`Error, ${nameObject.name} already deleted from the phonebook`)\r\n              setTimeout(() => {\r\n                setErrMessage(null)\r\n              }, 3000)\r\n            })\r\n        }\r\n    else {\r\n        personService\r\n          .create(nameObject)\r\n          .then(returned => {\r\n            setPersons(persons.concat(returned))\r\n            setNewName(\"\")\r\n            setNewNumber(\"\")\r\n            setMessage(`Succesfully added ${nameObject.name} to the phonebook`)\r\n            setTimeout(() => {\r\n              setMessage(null)\r\n            }, 3000)\r\n          })\r\n          .catch(error => {\r\n            setErrMessage(error.response.data.error)\r\n            setTimeout(() => {\r\n              setErrMessage(null)\r\n            }, 5000)\r\n          })\r\n        //console.log(\"added\", event.target) \r\n      }\r\n    }\r\n\r\n  const deleteName = (id) => {\r\n    const conf = window.confirm(`Delete ${id.name} ?`)\r\n    if (conf === true){\r\n      personService\r\n        .remove(id.id)\r\n        .then(deleted => {\r\n          setMessage(`Succesfully deleted ${id.name} from the phonebook`)\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n            }, 3000)\r\n          })\r\n        .catch(error => {\r\n          setErrMessage(`Error, ${id.name} already deleted from the phonebook`)\r\n          setTimeout(() => {\r\n            setErrMessage(null)\r\n          }, 3000)\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleNameEdit = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberEdit = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterEdit = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const filterPersons = (array, search) => {\r\n    return array.filter(e => e.name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\r\n  }\r\n\r\n  const hook = () => {\r\n    console.log(\"effect\")\r\n  personService\r\n    .getAll()\r\n    .then(initial => {\r\n      console.log(\"promise fulfilled\")\r\n      setPersons(initial)\r\n    })\r\n  }\r\n\r\n  useEffect(hook, [])\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Message message = {message}/>\r\n      <ErrorMsg message = {errMessage}/>\r\n\r\n      <h1>Phonebook</h1>\r\n      \r\n      <Filter filter={filter} onChange={handleFilterEdit}></Filter>\r\n      \r\n      <div> <h2>Add name and number</h2> </div>\r\n      \r\n      <PersonDisplay newName={newName} handleNameEdit={handleNameEdit} \r\n        newNumber={newNumber} handleNumberEdit={handleNumberEdit}></PersonDisplay>\r\n      \r\n      <AddBtn addName={addName}></AddBtn>\r\n      \r\n      <h2>Numbers</h2>\r\n      \r\n        {filterPersons(persons, filter).map((names) =>\r\n        <Names key={names.name} names={names} delName={() => deleteName(names)}/>)}\r\n          \r\n    </div>\r\n  )\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n\r\n"],"sourceRoot":""}